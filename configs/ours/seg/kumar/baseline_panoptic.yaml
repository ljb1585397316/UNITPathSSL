MODEL:
  MASK_ON: True
  META_ARCHITECTURE: "PanopticFPN"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: -1
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    NORM: "GN" # "BN" when using other checkpoints
    STRIDE_IN_1X1: False
  FPN:
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
    NORM: "GN"
  ANCHOR_GENERATOR:
    SIZES: [[32], [64], [128], [256], [512]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level
    PRE_NMS_TOPK_TEST: 30000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000
    POST_NMS_TOPK_TEST: 15000
    BATCH_SIZE_PER_IMAGE: 512
  ROI_HEADS:
    NAME: "StandardROIHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 1
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    NORM: "GN"
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    NORM: "GN"
  SEM_SEG_HEAD:
    NUM_CLASSES: 2
  PIXEL_MEAN: [127.5, 127.5, 127.5]
  PIXEL_STD: [127.5, 127.5, 127.5]
  LOAD_PROPOSALS: false
DATASETS:
  TRAIN: ("kumar_train_panoptic_separated",)
  TEST: ("kumar_test_panoptic",)
DATALOADER:
  FILTER_EMPTY_ANNOTATIONS: False
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.004
  STEPS: (4000, 8000)
  MAX_ITER: 10000
  WARMUP_ITERS: 100
  CHECKPOINT_PERIOD: 300
INPUT:
  MIN_SIZE_TRAIN: (256, )
  MAX_SIZE_TRAIN: 256
  CROP:
    ENABLED: True
    TYPE: 'absolute'
    SIZE: [ 256, 256 ]
  MIN_SIZE_TEST: 1000
  MAX_SIZE_TEST: 1000
  RANDOM_FLIP: "horizontal"
  FORMAT: RGB
TEST:
  EVAL_PERIOD: 300
  DETECTIONS_PER_IMAGE: 1500
VERSION: 2
OUTPUT_DIR: ./results/seg/kumar/baseline_panoptic
