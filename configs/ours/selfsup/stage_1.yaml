CYCLE:
  SEG_GUIDE_STRATEGY: 'ISG' # which segmentation guided strategy to choose
  MULTITASK: False # Remain for future work(gland+nucleus), not useful now
  DATASET_A_NAME: colon_multichannel_10800 # name for dataset_mask
  DATASET_B_NAME: colon_-160000 # name for dataset_pathology
  DATASET_SCALE: ['40x_256', ] # scale for pathology
  DATASET_ROOT: /data/cycleGAN/dataset_for_train/ # root of the dataset
  MASK_FORMAT: multichannel # support ['binary', 'grey' ,'multichannel'] for ablation study
  LAMBDA_A: 1.0 # weight for cycle-consistency loss:mask-pathology-mask
  LAMBDA_B: 1.0 # weight for cycle-consistency loss:pathology-mask-pathology
  LAMBDA_D_A: 1.0 # weight for discriminator_mask
  LAMBDA_D_B: 1.0 # weight for discriminator_pathology
  LAMBDA_CYCLE: 10.0 # weight for total cycle-consistency loss
  LAMBDA_MRCNN_NUCLEUS: 6.0 # weight for mask r-cnn loss !!!!
  LAMBDA_MRCNN_GLAND: 1.0 # Remain for future work(gland+nucleus), not useful now
  LOG_INTERVAL: 50 # interval for printing cycle loss
  G_AB: StyleGAN # support ['UNet', 'ResNet', 'StyleGAN'] for ablation study
  MRCNN_MAX_REPEAT: 0
  DATA_FILTER_REPEAT: 0
  BA_SCRATCH: ''

STYLEGAN:
  # the same with stylegan2-ada
  KIMG_PER_TICK: 4
  METRICS: ['fid50k_full']
  BASE_CONFIG: 'paper256'
  R1_GAMMA: 1.0
  AUG: 'ada'
  AUG_PROB: None
  TARGET: None
  AUG_PIPE: 'bgc'
  FREEZED: None
  SKIP_RESOLUTION: 64 # whether add skip connection between the last resolution(256 resolution)
  CONDMOD: True # whether use co-modulation method to concatenate vector w with image encoding

# the same with detectron2
MODEL:
  MASK_ON: True
  META_ARCHITECTURE: "GeneralizedRCNN_Simplified"
  BACKBONE:
    NAME: "build_resnet_fpn_backbone"
    FREEZE_AT: -1
  RESNETS:
    OUT_FEATURES: ["res2", "res3", "res4", "res5"]
    NORM: "GN"
    STRIDE_IN_1X1: False
  FPN:
    IN_FEATURES: ["res2", "res3", "res4", "res5"]
    NORM: "GN"
  ANCHOR_GENERATOR:
    SIZES: [[32], [64], [128], [256], [512]]  # One size for each in feature map
    ASPECT_RATIOS: [[0.5, 1.0, 2.0]]  # Three aspect ratios (same for all in feature maps)
  RPN:
    IN_FEATURES: ["p2", "p3", "p4", "p5", "p6"]
    PRE_NMS_TOPK_TRAIN: 2000  # Per FPN level
    PRE_NMS_TOPK_TEST: 1000  # Per FPN level
    # Detectron1 uses 2000 proposals per-batch,
    # (See "modeling/rpn/rpn_outputs.py" for details of this legacy issue)
    # which is approximately 1000 proposals per-image since the default batch size for FPN is 2.
    POST_NMS_TOPK_TRAIN: 1000
    POST_NMS_TOPK_TEST: 1000
  ROI_HEADS:
    NAME: "StandardROIHeads"
    IN_FEATURES: ["p2", "p3", "p4", "p5"]
    NUM_CLASSES: 1
  ROI_BOX_HEAD:
    NAME: "FastRCNNConvFCHead"
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    NORM: "GN"
  ROI_MASK_HEAD:
    NAME: "MaskRCNNConvUpsampleHead"
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    NORM: "GN"
  SEM_SEG_HEAD:
    NAME: 'SemSegFPNHead'
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    IGNORE_VALUE: 255
    IN_FEATURES:
      - p2
      - p3
      - p4
      - p5
    LOSS_WEIGHT: 1.0
    NORM: GN
    NUM_CLASSES: 3
  PIXEL_MEAN: [127.5, 127.5, 127.5]
  PIXEL_STD: [127.5, 127.5, 127.5]
  LOAD_PROPOSALS: false
DATASETS:
  TRAIN: ("nucleus_train",)
  TEST: ("lizard_dpath_train_18",)
SOLVER:
  IMS_PER_BATCH: 12
  BASE_LR: 0.0004
  STEPS: (120000, 160000)
  MAX_ITER: 180000
  WARMUP_ITERS: 50
  CHECKPOINT_PERIOD: 1000
INPUT:
  MIN_SIZE_TRAIN: (256,)
  MAX_SIZE_TRAIN: 256
  MIN_SIZE_TEST: 256
  MAX_SIZE_TEST: 256
  RANDOM_FLIP: "horizontal"
  FORMAT: RGB
  CROP:
    ENABLED: True
    TYPE: 'relative_range'
    SIZE: [0.8, 0.8]
TEST:
  AUG:
    MIN_SIZES: (256,)
    MAX_SIZE: 256
    FLIP: (False)
SEED: 35
VERSION: 2

